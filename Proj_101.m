%% Michael E. Ramsey
% Project 101
% This is a Matlab file to solve project 101 on projecteuler.net

%% Generate the first 1000 numbers of our sequence:
for n = 1:1000
    seq(n) = 1 - n + n^2 - n^3 + n^4 - n^5 + n^6 - n^7 + n^8 - n^9 + n^10;
end

% We will skip the case for the first sequence which only generates a
% sequece of ones. The BOP for this case is 1, which is why we start with
% BOP count at 1
BOPcount = 1;

% Here we are creating our system of linear equations to find our
% interpolation polynomial of degree (i-2) for seq(1:i).
for i = 2:length(seq)
    
    % Take the piece of the sequence that needs interpolation
    parseq = seq(1:i);
    parseq = parseq';
  
    % Initialize the matrix needed of appropriate size
    A = zeros(i);
           
    % Set the first column of a bunch of ones. This corresponds to the
    % constant term in our system of linear equations
    A(:,1) = ones(i,1);
    
    % Set up the other columns of our matrix A. The rest of the columns are
    % squres of the sequence [1 2 3 4 5 6 7 ...]
    natural = linspace(1,i,i);
    for j = 2:i
        A(:,j) = natural.^(j-1);
    end
    
    % Solve the system of linear equations
    A = [A, parseq];
    rrefA = rref(A);
    
    % Take the last column which containt the coefficients of our
    % polynomial a + b(x) + c(x^2) + d(x^3) + ...
    coeff = rrefA(:,i+1);
    
    % Our interpolation polynomial will work up to index (i+1). Calculate
    % the next iteration and see if it is the correct next number of the
    % sequence. If not, add it to BOP Count
    condition = false;
    n = i + 1; % This is the next iteration we must check
    while condition == false
        
        % Initialize the polynomial sum
        pol = 0;
        
        % This systematically computes each piece of the polynomial sum and
        % adds it to the total
        for j = 1:i
            pol = pol + coeff(j)*n^(j-1);
        end
        
        % Check to see if our polynoial sum is correct
        if pol ~= seq(n) % If not, add it to BOPcount
            BOPcount = BOPcount + pol;
            condition = true;
        else % It it is, go to the next value of n
            n = n + 1;
        end
    end
    
    % Once i == 10 we have the correct interpolation polynomial for the
    % entire sequence generated by seq. Terminate the outer loop and
    % display the answer for the problem
    if i == 10
        BOPcountAns = [BOPcount];
        BOPcountAns = uint64(BOPcountAns)
        break
    end
        
end
